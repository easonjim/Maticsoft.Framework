<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IDS_Message_DisplaySequence_Description" xml:space="preserve">
    <value>设置顾客下订单选择支付方式时，此支付方式显示的位置</value>
  </data>
  <data name="IDS_FormField_lblPassWord" xml:space="preserve">
    <value>商户密码：</value>
  </data>
  <data name="IDS_PaymnetMode_MerchantCode_NotInput" xml:space="preserve">
    <value>请输入商户号</value>
  </data>
  <data name="IDS_FormField_chkIsPercent" xml:space="preserve">
    <value>百分比</value>
  </data>
  <data name="IDS_PaymentMode_Charge_Error" xml:space="preserve">
    <value>手续费设置有误，手续费只能是大于或等于零的数值</value>
  </data>
  <data name="IDS_PaymentModeName_NotInput" xml:space="preserve">
    <value>请输入支付方式名称</value>
  </data>
  <data name="IDS_FormField_lblDisplaySequence" xml:space="preserve">
    <value>显示顺序号：</value>
  </data>
  <data name="IDS_FormField_nullToDisplay" xml:space="preserve">
    <value>请选择支付接口</value>
  </data>
  <data name="IDS_PaymnetMode_Password_NotInput" xml:space="preserve">
    <value>请输入商户密码</value>
  </data>
  <data name="IDS_FormField_lblGateway" xml:space="preserve">
    <value>接口类型：</value>
  </data>
  <data name="IDS_PaymnetMode_SecondKey_Description" xml:space="preserve">
    <value>为了保证支付的安全性和真实性，很多支付公司都为商家提供了一个密钥并要求使用此密钥验证支付信息，也有的支付公司称之为校验码或验证码</value>
  </data>
  <data name="IDS_FormField_lblMerchantCode" xml:space="preserve">
    <value>商户号：</value>
  </data>
  <data name="IDS_FormField_lblCharge" xml:space="preserve">
    <value>手续费：</value>
  </data>
  <data name="IDS_FormField_lblCurrencys" xml:space="preserve">
    <value>支持交易货币：</value>
  </data>
  <data name="IDS_Message_MerchantCode_Description" xml:space="preserve">
    <value>商户号一般是您在支付公司注册的账号，您也可以登录支付公司后按照说明查找您的商户号，长度限制在300个字符以内</value>
  </data>
  <data name="IDS_FormField_lblCurrencyHelp" xml:space="preserve">
    <value>必填  系统列举出了此接口类型支持的所有货币类型，您需要在这些货币类型中选择网站接受支付的货币类型</value>
  </data>
  <data name="IDS_FormField_lblPartner" xml:space="preserve">
    <value>合作伙伴：</value>
  </data>
  <data name="IDS_Message_Charge_Description" xml:space="preserve">
    <value>设置顾客选择此支付方式时需要额外支付的手续费，如果选中百分比，则表示支付手续费的金额根据订单金额按照设置的百分比收取，如果不需要顾客支付手续费，则设为0</value>
  </data>
  <data name="IDS_SelectPayInterface" xml:space="preserve">
    <value>请先选择一个支付接口</value>
  </data>
  <data name="IDS_Message_PayInterface_Description" xml:space="preserve">
    <value>在选择一个接口类型之前，必须具备一个在该支付公司注册过的账号，然后按照支付公司提供的账户信息填写此支付方式所需的信息，不同的接口类型要求填写的信息可能会不一样</value>
  </data>
  <data name="IDS_ErrorMessage_DisplaySequence" xml:space="preserve">
    <value>显示顺序号必须是在1至65535之间的数字</value>
  </data>
  <data name="IDS_FormField_PassWord_Description" xml:space="preserve">
    <value>请输入您的商户号对应的密码，此支付公司要求填写密码</value>
  </data>
  <data name="IDS_FormField_lblDescription" xml:space="preserve">
    <value>详细介绍 ：</value>
  </data>
  <data name="IDS_PaymentModeName_OutLength" xml:space="preserve">
    <value>支付方式名称长度超出范围</value>
  </data>
  <data name="IDS_PaymnetMode_SecondKey_NotInput" xml:space="preserve">
    <value>请输入第二密钥</value>
  </data>
  <data name="IDS_FormField_lblSecretKey" xml:space="preserve">
    <value>商户密钥：</value>
  </data>
  <data name="IDS_PaymnetMode_SecretKey_NotInput" xml:space="preserve">
    <value>请输入商户密钥</value>
  </data>
  <data name="IDS_FormField_lblEmailAddress" xml:space="preserve">
    <value>商户邮件：</value>
  </data>
  <data name="IDS_FormField_lblName" xml:space="preserve">
    <value>支付方式名称：</value>
  </data>
  <data name="IDS_PaymnetMode_Currency_NotSelect" xml:space="preserve">
    <value>请选择当前商户支持的交易币种</value>
  </data>
  <data name="IDS_Message_Name_Description" xml:space="preserve">
    <value>支付方式名称的长度限制在50个字符以内</value>
  </data>
  <data name="IDS_FormField_lblSecondKey" xml:space="preserve">
    <value>第二密钥：</value>
  </data>
</root>