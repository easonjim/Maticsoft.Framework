<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IDM_btnTestEmailSettings_Click_Msg_OK" xml:space="preserve">
    <value>测试邮件发送成功，请到{0}查看邮件</value>
  </data>
  <data name="IDM_btnTestEmailSettings_Click_Msg_NO" xml:space="preserve">
    <value>测试邮件发送失败</value>
  </data>
  <data name="IDM_EmailGeneralSettings" xml:space="preserve">
    <value>一般设置</value>
  </data>
  <data name="IDM_lblSmtpServerPassword" xml:space="preserve">
    <value>SMTP用户密码：</value>
  </data>
  <data name="IDM_lblSmtpServerUserName" xml:space="preserve">
    <value>SMTP用户名：</value>
  </data>
  <data name="IDS_Invalid_SmtpServerPassword_NotComp" xml:space="preserve">
    <value>两次输入的密码不一致</value>
  </data>
  <data name="IDS_PageTiTle" xml:space="preserve">
    <value>邮件发送设置</value>
  </data>
  <data name="IDM_lblAdminEmailAddress" xml:space="preserve">
    <value>SMTP邮箱：</value>
  </data>
  <data name="IDS_help01" xml:space="preserve">
    <value>设置此SMTP服务器是否需要安全连接，如果使用安全连接，SMTP的端口号则可能和默认的端口号不一样</value>
  </data>
  <data name="IDM_lblSmtpServer" xml:space="preserve">
    <value>SMTP服务器：</value>
  </data>
  <data name="IDS_EmailThrottle_Error" xml:space="preserve">
    <value>一次发送数量限制在10000以下</value>
  </data>
  <data name="IDM_help082" xml:space="preserve">
    <value>请再输入一遍您登录邮箱的密码</value>
  </data>
  <data name="IDM_lblEmailEncoding" xml:space="preserve">
    <value>邮件编码格式：</value>
  </data>
  <data name="IDM_lblEmailThrottle" xml:space="preserve">
    <value>一次发送数量限制：</value>
  </data>
  <data name="IDM_btnChangeEmailSettings" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="IDM_help09" xml:space="preserve">
    <value>设置SMTP服务器的端口号，一般默认都是25</value>
  </data>
  <data name="IDM_help08" xml:space="preserve">
    <value>设置您登录邮箱的密码</value>
  </data>
  <data name="IDM_help03" xml:space="preserve">
    <value>设置一次发送邮件的最大数量，设置为0表示不限制数量</value>
  </data>
  <data name="IDM_help07" xml:space="preserve">
    <value>设置您在邮件服务器上注册的用户名。如果是普通邮箱为您的电子邮件地址的“@”符号前面的部分，如果是企业邮箱为整个邮箱</value>
  </data>
  <data name="IDM_help04" xml:space="preserve">
    <value>SMTP服务器的地址，如新浪的SMTP服务器是smtp.sina.com.cn</value>
  </data>
  <data name="IDM_help10" xml:space="preserve">
    <value>设置网站发送给客户邮件的电子邮件地址，电子邮件地址的长度在200个字符以内</value>
  </data>
  <data name="IDS_Invalid_SmtpServerUserName_FormatError" xml:space="preserve">
    <value>请输入邮件服务器登录名</value>
  </data>
  <data name="IDM_btnTestEmailSettings" xml:space="preserve">
    <value>测试邮件设置</value>
  </data>
  <data name="IDS_Invalid_EmailThrottle_NotNumber" xml:space="preserve">
    <value>一次发送邮件的最大数量只能是数字</value>
  </data>
  <data name="IDM_SMTPLoginInfo" xml:space="preserve">
    <value>邮件服务器登录设置</value>
  </data>
  <data name="IDM_lblSmtpEnableSsl" xml:space="preserve">
    <value>安全连接(SSL)：</value>
  </data>
  <data name="IDM_lblSmtpServerPassword2" xml:space="preserve">
    <value>重复用户密码：</value>
  </data>
  <data name="IDM_lblSmtpPortNumber" xml:space="preserve">
    <value>SMTP服务器端口：</value>
  </data>
  <data name="IDS_PageDesc" xml:space="preserve">
    <value>请正确配置您的邮件服务器信息，系统将使用这些信息自动为客户发送邮件</value>
  </data>
  <data name="IDS_Invalid_SmtpPortNumber_NotNumber" xml:space="preserve">
    <value>邮件服务器的端口号只能是数字</value>
  </data>
  <data name="IDS_btnChangeEmailSettings_Click_Msg_OK" xml:space="preserve">
    <value>已成功修改邮件发送设置</value>
  </data>
  <data name="IDS_EmailAddress_Error" xml:space="preserve">
    <value>电子邮件地址格式不正确，请输入正确的电子邮件地址</value>
  </data>
</root>